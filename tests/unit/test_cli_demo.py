#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ CLI
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent / "src"))

from kira.cli.kira_calendar import main as calendar_main
from kira.cli.kira_code import main as code_main
from kira.cli.kira_ext import main as ext_main
from kira.cli.kira_inbox import main as inbox_main
from kira.cli.kira_rollup import main as rollup_main


def test_inbox():
    """–¢–µ—Å—Ç inbox –∫–æ–º–∞–Ω–¥—ã"""
    print("=== –¢–µ—Å—Ç inbox ===")
    return inbox_main(["--verbose"])


def test_calendar():
    """–¢–µ—Å—Ç calendar –∫–æ–º–∞–Ω–¥—ã"""
    print("\n=== –¢–µ—Å—Ç calendar ===")
    print("Calendar pull:")
    result1 = calendar_main(["pull", "--verbose"])
    print("Calendar push:")
    result2 = calendar_main(["push", "--dry-run", "--verbose"])
    return result1 or result2


def test_rollup():
    """–¢–µ—Å—Ç rollup –∫–æ–º–∞–Ω–¥—ã"""
    print("\n=== –¢–µ—Å—Ç rollup ===")
    print("Daily rollup:")
    result1 = rollup_main(["daily", "--verbose"])
    print("Weekly rollup:")
    result2 = rollup_main(["weekly", "--verbose"])
    return result1 or result2


def test_code():
    """–¢–µ—Å—Ç code –∫–æ–º–∞–Ω–¥—ã"""
    print("\n=== –¢–µ—Å—Ç code ===")
    print("Code analyze:")
    result1 = code_main(["analyze", "--verbose"])
    print("Code search:")
    result2 = code_main(["search", "function", "--verbose"])
    return result1 or result2


def test_ext():
    """–¢–µ—Å—Ç ext –∫–æ–º–∞–Ω–¥—ã"""
    print("\n=== –¢–µ—Å—Ç ext ===")
    print("Ext list:")
    result1 = ext_main(["list", "--verbose"])
    print("Ext info:")
    result2 = ext_main(["info", "kira-inbox", "--verbose"])
    return result1 or result2


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CLI –∫–æ–º–∞–Ω–¥ Kira")

    results = []

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
    results.append(test_inbox())
    results.append(test_calendar())
    results.append(test_rollup())
    results.append(test_code())
    results.append(test_ext())

    # –ü–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
    print("\n=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ===")
    success_count = sum(1 for r in results if r == 0)
    total_count = len(results)

    print(f"–£—Å–ø–µ—à–Ω–æ: {success_count}/{total_count}")

    if success_count == total_count:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        return 1


if __name__ == "__main__":
    sys.exit(main())
