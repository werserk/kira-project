#!/usr/bin/env python3
"""
CLI –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å inbox-–∫–æ–Ω–≤–µ–π–µ—Ä–æ–º
"""
import argparse
import sys
from pathlib import Path
from typing import List, Optional

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent.parent / "src"))

from ..core.config import load_config
from ..pipelines.inbox_pipeline import InboxPipeline
from ..registry import get_plugin_registry


def create_parser() -> argparse.ArgumentParser:
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞—Ä—Å–µ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è inbox –∫–æ–º–∞–Ω–¥—ã"""
    parser = argparse.ArgumentParser(
        prog="kira inbox",
        description="–ó–∞–ø—É—Å—Ç–∏—Ç—å inbox-–∫–æ–Ω–≤–µ–π–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤"
    )

    parser.add_argument(
        '--dry-run',
        action='store_true',
        help='–ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'
    )

    parser.add_argument(
        '--verbose', '-v',
        action='store_true',
        help='–ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥'
    )

    parser.add_argument(
        '--config',
        type=str,
        help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: kira.yaml)'
    )

    return parser


def main(args: Optional[List[str]] = None) -> int:
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è inbox CLI

    Args:
        args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (–µ—Å–ª–∏ None, –±–µ—Ä–µ—Ç—Å—è –∏–∑ sys.argv)

    Returns:
        –ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ (0 - —É—Å–ø–µ—Ö, 1 - –æ—à–∏–±–∫–∞)
    """
    if args is None:
        args = sys.argv[1:]

    parser = create_parser()
    parsed_args = parser.parse_args(args)

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = load_config(parsed_args.config)

        if parsed_args.verbose:
            print("üîß –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
            print(f"   Vault: {config.get('vault', {}).get('path', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ inbox –ø–ª–∞–≥–∏–Ω –≤–∫–ª—é—á–µ–Ω
        plugin_registry = get_plugin_registry()
        if not plugin_registry.is_plugin_enabled('kira-inbox'):
            print("‚ùå –ü–ª–∞–≥–∏–Ω kira-inbox –Ω–µ –≤–∫–ª—é—á–µ–Ω")
            return 1

        if parsed_args.verbose:
            print("‚úÖ –ü–ª–∞–≥–∏–Ω kira-inbox –≤–∫–ª—é—á–µ–Ω")

        # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º pipeline
        pipeline = InboxPipeline(config)

        if parsed_args.dry_run:
            print("üîç –†–µ–∂–∏–º dry-run: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
            items = pipeline.scan_inbox_items()
            print(f"   –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(items)}")

            for item in items[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   - {item}")

            if len(items) > 5:
                print(f"   ... –∏ –µ—â–µ {len(items) - 5} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")

            return 0

        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        print("üöÄ –ó–∞–ø—É—Å–∫ inbox-–∫–æ–Ω–≤–µ–π–µ—Ä–∞...")

        if parsed_args.verbose:
            print("   –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ inbox...")

        processed_count = pipeline.run()

        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {processed_count}")

        if parsed_args.verbose:
            print("   –ö–æ–Ω–≤–µ–π–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")

        return 0

    except FileNotFoundError as e:
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        return 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è inbox-–∫–æ–Ω–≤–µ–π–µ—Ä–∞: {e}")
        if parsed_args.verbose:
            import traceback
            traceback.print_exc()
        return 1


if __name__ == "__main__":
    sys.exit(main())
