#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å CLI –¥–ª—è Kira
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python -m kira.cli <–∫–æ–º–∞–Ω–¥–∞> [–∞—Ä–≥—É–º–µ–Ω—Ç—ã]
"""
import argparse
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, str(Path(__file__).parent.parent.parent / "src"))

from .kira_calendar import main as calendar_main
from .kira_code import main as code_main
from .kira_ext import main as ext_main
from .kira_inbox import main as inbox_main
from .kira_rollup import main as rollup_main


def create_parser():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞—Ä—Å–µ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
    parser = argparse.ArgumentParser(
        prog="kira",
        description="Kira - —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  kira inbox                    # –ó–∞–ø—É—Å—Ç–∏—Ç—å inbox-–∫–æ–Ω–≤–µ–π–µ—Ä
  kira calendar pull           # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å (pull)
  kira calendar push           # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å (push)
  kira rollup daily            # –°–æ–∑–¥–∞—Ç—å –¥–Ω–µ–≤–Ω–æ–π rollup
  kira rollup weekly           # –°–æ–∑–¥–∞—Ç—å –Ω–µ–¥–µ–ª—å–Ω—ã–π rollup
  kira ext list               # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
  kira ext install <name>     # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
  kira ext enable <name>      # –í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
  kira ext disable <name>     # –û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
  kira validate               # –í–∞–ª–∏–¥–∞—Ü–∏—è Vault
        """
    )

    subparsers = parser.add_subparsers(
        dest='command',
        help='–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã',
        required=True
    )

    # –ö–æ–º–∞–Ω–¥–∞ inbox
    inbox_parser = subparsers.add_parser(
        'inbox',
        help='–ó–∞–ø—É—Å—Ç–∏—Ç—å inbox-–∫–æ–Ω–≤–µ–π–µ—Ä'
    )
    inbox_parser.set_defaults(func=inbox_main)

    # –ö–æ–º–∞–Ω–¥–∞ calendar
    calendar_parser = subparsers.add_parser(
        'calendar',
        help='–†–∞–±–æ—Ç–∞ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º'
    )
    calendar_subparsers = calendar_parser.add_subparsers(
        dest='calendar_action',
        help='–î–µ–π—Å—Ç–≤–∏–µ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º',
        required=True
    )

    calendar_subparsers.add_parser(
        'pull',
        help='–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å (–ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ)'
    ).set_defaults(func=lambda args: calendar_main(['pull']))

    calendar_subparsers.add_parser(
        'push',
        help='–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å (–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ)'
    ).set_defaults(func=lambda args: calendar_main(['push']))

    # –ö–æ–º–∞–Ω–¥–∞ rollup
    rollup_parser = subparsers.add_parser(
        'rollup',
        help='–°–æ–∑–¥–∞—Ç—å rollup –æ—Ç—á–µ—Ç—ã'
    )
    rollup_subparsers = rollup_parser.add_subparsers(
        dest='rollup_period',
        help='–ü–µ—Ä–∏–æ–¥ rollup',
        required=True
    )

    rollup_subparsers.add_parser(
        'daily',
        help='–°–æ–∑–¥–∞—Ç—å –¥–Ω–µ–≤–Ω–æ–π rollup'
    ).set_defaults(func=lambda args: rollup_main(['daily']))

    rollup_subparsers.add_parser(
        'weekly',
        help='–°–æ–∑–¥–∞—Ç—å –Ω–µ–¥–µ–ª—å–Ω—ã–π rollup'
    ).set_defaults(func=lambda args: rollup_main(['weekly']))

    # –ö–æ–º–∞–Ω–¥–∞ code
    code_parser = subparsers.add_parser(
        'code',
        help='–†–∞–±–æ—Ç–∞ —Å –∫–æ–¥–æ–º'
    )
    code_parser.set_defaults(func=code_main)

    # –ö–æ–º–∞–Ω–¥–∞ ext (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
    ext_parser = subparsers.add_parser(
        'ext',
        help='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏'
    )
    ext_subparsers = ext_parser.add_subparsers(
        dest='ext_action',
        help='–î–µ–π—Å—Ç–≤–∏–µ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏',
        required=True
    )

    ext_subparsers.add_parser(
        'list',
        help='–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π'
    ).set_defaults(func=lambda args: ext_main(['list']))

    install_parser = ext_subparsers.add_parser(
        'install',
        help='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ'
    )
    install_parser.add_argument('name', help='–ò–º—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏')
    install_parser.set_defaults(func=lambda args: ext_main(['install', args.name]))

    enable_parser = ext_subparsers.add_parser(
        'enable',
        help='–í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ'
    )
    enable_parser.add_argument('name', help='–ò–º—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è')
    enable_parser.set_defaults(func=lambda args: ext_main(['enable', args.name]))

    disable_parser = ext_subparsers.add_parser(
        'disable',
        help='–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ'
    )
    disable_parser.add_argument('name', help='–ò–º—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è')
    disable_parser.set_defaults(func=lambda args: ext_main(['disable', args.name]))

    # –ö–æ–º–∞–Ω–¥–∞ validate
    validate_parser = subparsers.add_parser(
        'validate',
        help='–í–∞–ª–∏–¥–∞—Ü–∏—è Vault –ø—Ä–æ—Ç–∏–≤ —Å—Ö–µ–º'
    )
    validate_parser.set_defaults(func=validate_vault)

    return parser


def validate_vault(args):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è Vault –ø—Ä–æ—Ç–∏–≤ —Å—Ö–µ–º"""
    try:
        from kira.core.config import load_config
        from kira.core.schemas import validate_vault_schemas

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = load_config()
        vault_path = config.get('vault', {}).get('path')

        if not vault_path:
            print("‚ùå –ü—É—Ç—å –∫ Vault –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return 1

        print(f"üîç –í–∞–ª–∏–¥–∞—Ü–∏—è Vault: {vault_path}")

        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        errors = validate_vault_schemas(vault_path)

        if errors:
            print("‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
            for error in errors:
                print(f"  - {error}")
            return 1
        else:
            print("‚úÖ Vault –≤–∞–ª–∏–¥–µ–Ω")
            return 0

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
        return 1


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è CLI"""
    parser = create_parser()
    args = parser.parse_args()

    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        if hasattr(args, 'func'):
            return args.func(args)
        else:
            parser.print_help()
            return 1

    except KeyboardInterrupt:
        print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 130
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        return 1


if __name__ == "__main__":
    sys.exit(main())
